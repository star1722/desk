#include <iostream>
#include <vector>
#include <omp.h>
#include <climits>
using namespace std;

void min_max_sum_avg_reduction(vector<int>& arr) {
    int min_value = INT_MAX, max_value = INT_MIN, sum = 0;

    #pragma omp parallel for reduction(min: min_value) reduction(max: max_value) reduction(+: sum)
    for (int i = 0; i < arr.size(); i++) {
        if (arr[i] < min_value) min_value = arr[i];
        if (arr[i] > max_value) max_value = arr[i];
        sum += arr[i];
    }

    cout << "Minimum value: " << min_value << endl;
    cout << "Maximum value: " << max_value << endl;
    cout << "Sum: " << sum << endl;
    cout << "Average: " << (double)sum / arr.size() << endl;
}

int main() {
    vector<int> arr = {5, 2, 9, 1, 7, 6, 8, 3, 4};
    min_max_sum_avg_reduction(arr);
    return 0;
}

